service.mock = true

# Data source
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=password

spring.main.allow-bean-definition-overriding = true

spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL81Dialect

spring.kafka.bootstrap-servers = ${spring.embedded.kafka.brokers}
kafka.bootstrap-servers = ${spring.embedded.kafka.brokers}

spring.kafka.producer.properties.schema.registry.url= not-used
spring.kafka.producer.value-serializer = tech.seedz.template.systemtest.kafka.LosKafkaAvroValueSerializer
spring.kafka.producer.key-serializer = org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.group-id = template-id

spring.kafka.consumer.properties.schema.registry.url= not-used
spring.kafka.consumer.value-deserializer = tech.seedz.template.systemtest.kafka.LosKafkaAvroValueDeserializer
spring.kafka.consumer.key-deserializer = org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.group-id = showcase-consumer-id

spring.kafka.auto.offset.reset = earliest

spring.kafka.producer.auto.register.schemas= true
spring.kafka.properties.specific.avro.reader= true