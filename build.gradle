plugins {
	id 'org.springframework.boot' version '2.7.3'
	id 'io.spring.dependency-management' version '1.0.13.RELEASE'
	id 'java'
	id 'checkstyle'
}

group = 'tech.seedz'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven {
		url 'https://packages.confluent.io/maven/'
		metadataSources {
			mavenPom()
			artifact()
			ignoreGradleMetadataRedirection()
		}
	}
}

ext {
	set('testcontainersVersion', "1.17.3")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.flywaydb:flyway-core:9.2.1'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation group: 'com.google.guava', name: 'guava', version: '31.1-jre'

	implementation 'org.apache.commons:commons-io:1.3.2'
	implementation 'com.squareup.okhttp3:okhttp:4.10.0'
	implementation 'com.jayway.jsonpath:json-path:2.7.0'
	implementation 'house.inksoftware:system-test-framework:6.0'

	implementation group: 'org.apache.kafka', name: 'kafka-clients', version: '3.2.3'
	implementation group: 'org.apache.kafka', name: 'kafka_2.13', version: '3.2.3'
	implementation 'org.springframework.kafka:spring-kafka'

	implementation 'io.confluent:kafka-avro-serializer:7.0.1'
	implementation 'log4j:log4j:1.2.17'

	runtimeOnly 'org.postgresql:postgresql'

	implementation group: 'io.springfox', name: 'springfox-boot-starter', version: '3.0.0'

	// Test dependencies
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'com.tngtech.archunit:archunit-junit5:0.23.1'
	testImplementation 'org.testcontainers:postgresql:1.17.3'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation "org.springframework.kafka:spring-kafka-test"
}

dependencyManagement {
	imports {
		mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
