plugins {
	id 'org.springframework.boot' version '2.7.4'
	id 'io.spring.dependency-management' version '1.0.14.RELEASE'
	id 'java'
	id 'idea'
	id 'com.github.davidmc24.gradle.plugin.avro' version '1.5.0'
	id 'checkstyle'
}

group = 'tech.seedz'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

checkstyle {
	toolVersion = '8.1'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenLocal()
	mavenCentral()
	maven {
		url "https://packages.confluent.io/maven"
	}
}

ext {
	set('testcontainersVersion', "1.17.3")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-stream'
	implementation 'org.apache.kafka:kafka-streams'
	implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka'
	implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka-streams'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation "io.confluent:kafka-avro-serializer:7.2.1"
	implementation "io.confluent:kafka-streams-avro-serde:7.2.1"
	implementation 'org.apache.avro:avro:1.11.1'
	implementation ('com.github.javafaker:javafaker:1.0.2') { exclude module: 'snakeyaml' }
	implementation 'javax.validation:validation-api:2.0.1.Final'

	implementation 'org.flywaydb:flyway-core:9.2.1'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation group: 'com.google.guava', name: 'guava', version: '31.1-jre'

	implementation 'org.apache.commons:commons-io:1.3.2'
	implementation 'com.squareup.okhttp3:okhttp:4.10.0'
	implementation 'com.jayway.jsonpath:json-path:2.7.0'
	testImplementation 'house.inksoftware:system-test-framework:14.0.0'


	implementation 'log4j:log4j:1.2.17'

	runtimeOnly 'org.postgresql:postgresql'

	implementation group: 'io.springfox', name: 'springfox-boot-starter', version: '3.0.0'

	// Test dependencies
	testImplementation 'com.tngtech.archunit:archunit-junit5:0.23.1'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
	testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
	testImplementation 'org.mockito:mockito-junit-jupiter:4.8.0'
	testImplementation("org.junit.jupiter:junit-jupiter-params:5.8.1")

	testImplementation 'org.springframework.kafka:spring-kafka-test:2.9.1'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.testcontainers:postgresql:1.17.3'
	testImplementation 'org.testcontainers:kafka:1.17.3'
	testImplementation 'tech.allegro.schema.json2avro:converter:0.2.15'

	testImplementation "org.springframework.kafka:spring-kafka-test"
	testImplementation 'io.confluent:kafka-json-schema-serializer:7.2.1'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:2021.0.4"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}


tasks.withType(Checkstyle) {
	exclude '**/generated/**'
}
